/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        ht: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&kp>, <&kp>;

            display-name = "home-row-mods";
        };
    };
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <36 49>;
        };

        leftparens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        rightparens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        lessthan {
            bindings = <&kp LT>;
            key-positions = <15 16>;
        };

        greaterthan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <19 20>;
        };

        leftbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 27>;
        };

        rightbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        leftbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <39 40>;
        };

        rightbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <45 46>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <5 6>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <17 18>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <29 30>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <41 44>;
        };
    };

    macros {
        rassign: rassign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp MINUS>;
            label = "RASSIGN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1         &kp N2            &kp N3              &kp N4            &kp N5                           &kp N6     &kp N7        &kp N8               &kp N9           &kp N0                  &kp DELETE
&kp ESC    &kp Q          &kp W             &kp E               &kp R             &kp T                            &kp Y      &kp U         &kp I                &kp O            &kp P                   &kp BSPC
&kp TAB    &ht K_CMENU A  &ht LEFT_ALT S    &ht LEFT_CONTROL D  &ht LEFT_SHIFT F  &lt 2 G                          &lt 1 H    &ht RSHIFT J  &ht RIGHT_CONTROL K  &ht RIGHT_ALT L  &ht LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z          &kp X             &kp C               &kp V             &kp B    &kp C_MUTE    &mkp MB1  &kp N      &kp M         &kp COMMA            &kp DOT          &kp FSLH                &kp RSHFT
                          &kp LEFT_CONTROL  &kp LEFT_GUI        &kp INS           &kp RET  &mo 1         &mo 2     &kp SPACE  &kp DEL       &kp K_CMENU          &kp RIGHT_ALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&studio_unlock  &kp EXCL   &kp AT       &kp HASH         &kp DOLLAR  &kp PERCENT                    &kp CARET      &kp AMPERSAND  &kp STAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp TILDE       &kp SLASH  &kp N7       &kp NUMBER_8     &kp N9      &kp MINUS                      &kp AMPERSAND  &kp PIPE       &kp EXCL       &kp LESS_THAN         &kp GREATER_THAN       &trans
&kp EQUAL       &kp STAR   &kp N4       &kp N5           &kp N6      &kp PLUS                       &kp GRAVE      &kp MINUS      &kp EQUAL      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&rassign        &kp DOT    &kp N1       &kp N2           &kp N3      &kp N0       &trans    &trans  &kp LS(GRAVE)  &kp LS(MINUS)  &kp LS(EQUAL)  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACE)    &kp LS(BACKSLASH)
                           &bootloader  &kp KP_NUMBER_0  &kp KP_DOT  &trans       &trans    &trans  &trans         &trans         &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans          &kp F1           &kp F2          &kp F3          &kp F4           &kp F5                            &kp F6    &kp F7        &kp F8         &kp F9       &kp F10    &kp F11
&trans          &none            &none           &none           &none            &none                             &none     &none         &none          &none        &none      &kp F12
&msc SCRL_LEFT  &msc SCRL_RIGHT  &mkp MB2        &mmv MOVE_UP    &mkp MB1         &msc SCRL_UP                      &kp LEFT  &kp DOWN      &kp UP         &kp RIGHT    &kp PG_UP  &kp LC(HOME)
&trans          &kp K_UNDO       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &trans    &trans  &kp HOME  &kp LC(LEFT)  &kp LC(RIGHT)  &kp END      &kp PG_DN  &kp LC(END)
                                 &trans          &trans          &trans           &trans          &trans    &trans  &trans    &trans        &trans         &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none          &none             &none             &none          &none          &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none          &none             &none             &none          &none          &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &kp C_MUTE     &kp C_VOL_DN      &kp C_VOL_UP      &kp C_BRI_DEC  &kp C_BRI_INC  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &kp C_AC_BACK  &kp C_PLAY_PAUSE  &kp C_AC_FORWARD  &none          &none          &none
                                    &none            &none            &none            &none            &none              &none  &none          &none             &none             &none
            >;
        };
    };
};
